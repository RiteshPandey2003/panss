name: PANSS CI (Maven + MySQL + Redis + secret.properties)

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: panss_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17 and cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Install CLI tools for health checks
        run: |
          sudo apt-get update -y
          sudo apt-get install -y default-mysql-client redis-tools

      - name: Find pom.xml (auto-detect)
        id: find_pom
        run: |
          POM_PATH=$(find . -maxdepth 5 -type f -name "pom.xml" | head -n 1 || true)
          if [ -z "$POM_PATH" ]; then
            echo "No pom.xml found in repository!"
            exit 1
          fi
          echo "POM_PATH=$POM_PATH" >> $GITHUB_ENV

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in $(seq 1 60); do
            if mysqladmin ping -h127.0.0.1 -uroot -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "MySQL not ready ($i)..."
            sleep 2
          done
          if ! mysqladmin ping -h127.0.0.1 -uroot -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" >/dev/null 2>&1; then
            echo "MySQL did not become ready" >&2
            exit 1
          fi

      - name: Wait for Redis to be ready
        run: |
          echo "Waiting for Redis..."
          for i in $(seq 1 60); do
            if redis-cli -h 127.0.0.1 -p 6379 ping | grep -q PONG; then
              echo "Redis is up!"
              break
            fi
            echo "Redis not ready ($i)..."
            sleep 1
          done
          if ! redis-cli -h 127.0.0.1 -p 6379 ping | grep -q PONG; then
            echo "Redis did not become ready" >&2
            exit 1
          fi

      - name: Create secret.properties from GitHub Secrets
        run: |
          module_dir=$(dirname "${{ env.POM_PATH }}")
          resources_dir="$module_dir/src/main/resources"
          mkdir -p "$resources_dir"
          # Write secret.properties with expanded secrets (do NOT print its contents)
          cat > "$resources_dir/secret.properties" <<EOF
# Auto-generated by GitHub Actions â€” do NOT commit
DB_URL=jdbc:mysql://127.0.0.1:3306/panss_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
DB_USERNAME=root
DB_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
# REDIS_PASSWORD=   # optional - add if you set REDIS_PASSWORD secret
EOF
          echo "Wrote secret.properties to $resources_dir/secret.properties (contents not shown)"

      - name: Show files (debug)
        run: |
          module_dir=$(dirname "${{ env.POM_PATH }}")
          echo "Module dir: $module_dir"
          ls -la "$module_dir" || true
          echo "Resources dir listing:"
          ls -la "$module_dir/src/main/resources" || true

      - name: Build with Maven (clean package)
        env:
          MAVEN_OPTS: "-Xmx1024m"
        run: |
          mvn -B -f "${{ env.POM_PATH }}" clean package
